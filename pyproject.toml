[project]
name = "python-taxes"
version = "0.2.0"
description = "A Python library for calculating US Social Security, Medicare, and Federal Income taxes."
authors = [
    {name = "Stacy Noland", email = "46572585+stacynoland@users.noreply.github.com"}
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9,<4.0"
dependencies = [
    "pydantic (>=2.11.3,<3.0.0)"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
    "Typing :: Typed :: MyPy",
    "Typing :: Typed :: Pydantic",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/stacynoland/python-taxes"
Source = "https://github.com/stacynoland/python-taxes"

[tool.poetry]
packages = [{include = "python_taxes", from = "src"}]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
flake8 = "^7.2.0"
mypy = "^1.15.0"
tox = "^4.25.0"
black = "^25.1.0"
isort = "^6.0.1"
pre-commit = "^4.2.0"

[tool.tox]
requires = ["tox>=4.25.0,<5.0.0"]
env_list = ["py3", "type", "lint", "format"]

[dependency-groups]
pytest = [
    "pytest>=8.3.0,<9.0.0",
]

[tool.tox.env_run_base]
description = "Run tests under {base_python}"
package = "wheel"
dependency_groups = ["pytest"]
deps = [
    "pytest-cov>=6.1.0,<7.0.0",
]
commands = [["pytest"]]

[tool.tox.env.type]
description = "Run type checking on code base"
package = "wheel"
dependency_groups = ["pytest"]
deps = [
    "mypy>=1.15.0,<2.0.0",
]
commands = [["mypy", "."]]

[tool.tox.env.lint]
description = "Run linters on code base"
package = "wheel"
deps = ["flake8>=7.2.0,<8.0.0"]
commands = [["flake8", "."]]

[tool.tox.env.format]
description = "Run formatters on code base"
package = "wheel"
deps = [
    "black>=25.1.0,<26.0.0",
    "isort>=6.0.0,<7.0.0",
]
commands = [
    ["black", "."],
    ["isort", "."],
]

[tool.isort]
profile = "black"
skip_gitignore = true
extend_skip = [".pytest_cache",]
skip_glob = ["*/__pycache__/*", "tests/__pycache__/*"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
