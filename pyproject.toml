[project]
name = "python-taxes"
version = "0.7.0"
description = "A Python library for calculating US Social Security, Medicare, and Federal Income taxes."
authors = [
    {name = "Stacy Noland",email = "46572585+stacynoland@users.noreply.github.com"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pydantic (>=2.12.3,<3.0.0)"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[project.optional-dependencies]
cli = ["typer (>=0.19.2,<0.20.0)"]

[project.scripts]
pytax = "python_taxes.cli:app"

[project.urls]
Homepage = "https://github.com/stacynoland/python-taxes"
Source = "https://github.com/stacynoland/python-taxes"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
test = [
    "pytest (>=8.4.2,<9.0.0)",
    "typer (>=0.19.2,<0.20.0)",
]
lint = [
    "black (>=25.9.0,<26.0.0)",
    "flake8 (>=7.3.0,<8.0.0)",
    "isort (>=7.0.0,<8.0.0)",
    "mypy (>=1.18.2,<2.0.0)"
]
dev = [
    "pre-commit (>=4.3.0,<5.0.0)",
    "tox (>=4.31.0,<5.0.0)",
]
coverage = [
    "pytest-cov (>=7.0.0,<8.0.0)"
]

[tool.poetry]
packages = [{include = "python_taxes", from = "src"}]

[tool.isort]
profile = "black"
skip_gitignore = true
extend_skip = [".pytest_cache",]
skip_glob = ["*/__pycache__/*", "tests/__pycache__/*"]

[tool.tox]
env_list = ["lint", "testcov"]
labels = { tests = ["3.10", "3.11", "3.12", "3.13"] }

[tool.tox.env_run_base]
description = "Run base tests under {base_python}"
set_env = { PYTHONPATH = "src" }
package = "wheel"
dependency_groups = ["test"]
commands = [
    ["pytest", { replace = "posargs", default = ["tests"], extend = true }],
]

[tool.tox.env.testcov]
description = "Run tests and coverage report"
package = "wheel"
dependency_groups = ["test", "coverage"]
commands = [
    ["pytest", { replace = "posargs", default = ["--cov", "--cov-report", "term-missing"], extend = true }],
]

[tool.tox.env.lint]
description = "Lint code base"
package = "wheel"
dependency_groups = ["lint"]
commands = [
    ["black", { replace = "posargs", default = ["."], extend = true }],
    ["flake8", { replace = "posargs", default = ["src", "tests"], extend = true }],
    ["isort", { replace = "posargs", default = ["src", "tests"], extend = true }],
    ["mypy", { replace = "posargs", default = ["src", "tests"], extend = true }],
]

[tool.tox.env.check]
description = "Check code base"
package = "wheel"
dependency_groups = ["lint", "test"]
commands = [
    ["black", { replace = "posargs", default = ["--check", "."], extend = true }],
    ["isort", { replace = "posargs", default = ["--check-only", "src", "tests"], extend = true }],
    ["flake8", { replace = "posargs", default = ["src", "tests"], extend = true }],
    ["mypy", { replace = "posargs", default = ["src", "tests"], extend = true }],
]