name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_call:

jobs:
  build:
    name: Build distribution packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install poetry
        uses: stacynoland/install-poetry@v1
      - name: Build packages
        run: |
          poetry build --clean
      - name: Archive distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: pypi-dist
          path: dist/

  publish-to-pypi:
    name: Publish to PyPI
    if: ${{ ! contains(github.ref, 'alpha') }} && ${{ ! contains(github.ref, 'beta') }}
    needs: build
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/python-taxes
    runs-on: ubuntu-latest

    steps:
      - name: Download archived distributions
        uses: actions/download-artifact@v4
        with:
          name: pypi-dist
          path: dist/
      - name: Publish dist contents to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish to Test PyPI
    if: ${{ contains(github.ref, 'alpha') }} || ${{ contains(github.ref, 'beta') }}
    needs: build
    permissions:
      id-token: write
    environment:
      name: testpypi
      url: https://test.pypi.org/p/python-taxes
    runs-on: ubuntu-latest

    steps:
      - name: Download archived distributions
        uses: actions/download-artifact@v4
        with:
          name: pypi-dist
          path: dist/
      - name: Publish dist contents to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  github-release:
    name: Sign distributions and upload to GitHub Release
    if: ${{ success() }}
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - name: Download archived distributions
        uses: actions/download-artifact@v4
        with:
          name: pypi-dist
          path: dist/
      - name: Sign distributions with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --clobber
          --repo "$GITHUB_REPOSITORY"