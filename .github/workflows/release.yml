name: Release

on:
  release:
    types: [published]
  push:
    tags:
      - v**
  workflow_call:

jobs:
  github-release:
    name: Create GitHub Release
    if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && github.event_name == 'push' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --verify-tag
          --notes-from-tag

  github-prerelease:
    name: Create GitHub Pre-Release
    if: (contains(github.ref, 'alpha') || contains(github.ref, 'beta')) && github.event_name == 'push'
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create pre-release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --verify-tag
          --notes-from-tag
          --prerelease

  build:
    name: Build distribution packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install Poetry
        uses: stacynoland/install-poetry@v1
      - name: Build packages
        run: |
          poetry build --clean
      - name: Archive distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: pypi-dist
          path: dist/

  publish-to-pypi:
    name: Publish to PyPI
    needs: [build]
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/python-taxes
    runs-on: ubuntu-latest

    steps:
      - name: Download archived distributions
        uses: actions/download-artifact@v4
        with:
          name: pypi-dist
          path: dist/
      - name: Publish dist contents to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  upload-github-release:
    name: Sign distributions and upload to GitHub Release
    needs: [github-release, github-prerelease, publish-to-pypi]
    if: |
      always() &&
      (needs.github-prerelease.result == 'success' || needs.github-prerelease.result == 'skipped') &&
      (needs.github-release.result == 'success' || needs.github-release.result == 'skipped') &&
      needs.publish-to-pypi.result == 'success'
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download archived distributions
        uses: actions/download-artifact@v4
        with:
          name: pypi-dist
          path: dist/
      - name: Sign distributions with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Upload signed artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --clobber
          --repo "$GITHUB_REPOSITORY"